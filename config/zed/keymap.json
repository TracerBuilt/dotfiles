// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Editor",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-shift-h": "pane::SplitLeft",
      "ctrl-shift-j": "pane::SplitDown",
      "ctrl-shift-k": "pane::SplitUp",
      "ctrl-shift-l": "pane::SplitRight",
      "alt-w": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Dock",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "space f": "file_finder::Toggle",
      "space f f": "file_finder::Toggle",
      "space e": "workspace::ToggleLeftDock",
      "space t": "tab_switcher::Toggle"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      "space f": "file_finder::Toggle",
      "space f f": "file_finder::Toggle",
      "space e": "workspace::ToggleLeftDock",
      "space t": "tab_switcher::Toggle"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore" // In insert mode, make jk escape to normal mode.
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward",
      "j": ["workspace::SendKeystrokes", "g j"],
      "k": ["workspace::SendKeystrokes", "g k"]
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
    "bindings": {
      // Original bindings
      "space e": "workspace::ToggleLeftDock",
      "ctrl-/": "workspace::ToggleBottomDock",
      "space t": "tab_switcher::Toggle",
      "shift-h": ["workspace::SendKeystrokes", ": tabprev enter"],
      "shift-l": ["workspace::SendKeystrokes", ": tabnext enter"],

      // <space> + b: Buffer operations
      "space b d": ["workspace::SendKeystrokes", ": q enter"],
      "space b n": ["workspace::SendKeystrokes", ": tabnext enter"],
      "space b p": ["workspace::SendKeystrokes", ": tabprev enter"],

      // <space> + c: Code operations
      "space c a": "editor::ToggleComments",
      "space g d": "editor::GoToDefinition",
      "space c r": "editor::Rename",
      "space c f": "editor::Format",
      "] d": "editor::GoToDiagnostic",
      "[": "editor::GoToPreviousDiagnostic",

      // <space> + f: File operations (expanding existing space f)
      "space f f": "file_finder::Toggle",
      "space f n": "workspace::NewFile",
      "space f s": "workspace::Save",
      "space f w": ["workspace::SendKeystrokes", ": w enter"],

      // <space> + g: Git operations
      "space g g": "git_panel::ToggleFocus",

      // <space> + s: Search operations
      "space s g": "workspace::NewSearch",
      "space s r": "search::ToggleReplace",

      // <space> + w: Window/workspace operations
      "space w v": "pane::SplitRight",
      "space w s": "pane::SplitDown",
      "space w h": "workspace::ActivatePaneLeft",
      "space w j": "workspace::ActivatePaneDown",
      "space w k": "workspace::ActivatePaneUp",
      "space w l": "workspace::ActivatePaneRight"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "escape": "menu::Cancel",
      "q": "menu::Cancel"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "escape": "workspace::ToggleLeftDock",
      "q": "workspace::ToggleLeftDock"
    }
  },

  {
    "context": "Terminal",
    "bindings": {
      "ctrl-/": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "Search",
    "bindings": {
      "escape": "workspace::ToggleBottomDock",
      "q": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "SourceControl",
    "bindings": {
      "escape": "workspace::ToggleBottomDock",
      "q": "workspace::ToggleBottomDock"
    }
  }
]
